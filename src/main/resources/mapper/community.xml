<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kosta.mapper.CommunityMapper">

<parameterMap type="java.util.HashMap" id="hashmap"/>
  
  <resultMap type="com.kosta.dto.ReviewDTO" id="reviewdto">
  	<result column="content_no" property="contentno" />
  	<result column="user_no" property="userno" />
  	<result column="user_id" property="userid" />
  	<result column="user_nickname" property="nickname" />
  	<result column="content_title" property="title" />
  	<result column="content_date" property="writedate" />
  	<result column="content_content" property="contents" />
  	<result column="content_like" property="like" />
  	<result column="content_hate" property="dislike" />
  	<result column="likecheck" property="likecheck" />
  	<result column="hatecheck" property="hatecheck" />
  	<result column="spoiler_tf" property="spoiler" />  	
  </resultMap>
  
  <resultMap type="com.kosta.dto.ReportDTO" id="reportdto">
 	<result column="report_no" property="reportno" /> 
 	<result column="content_no" property="contentno" /> 
 	<result column="reply_no" property="reply" /> 
 	<result column="report_content" property="reportreason" /> 
 	<result column="report_count" property="reportsize" />   
  </resultMap>
  

<select id="totalCount2" resultType="int">
	select count(*)
	from comm_board
	where board_distinct_no = #{boardno} and movieCd = #{movieCd}
</select>

<!-- 리뷰 페이지 모든 리뷰 -->
<select id="list" parameterMap="hashmap" resultMap="reviewdto">
	select content_no, user_id, user_nickname, e1.user_no, e1.movieCd, board_distinct_no, content_date, content_content, content_like, content_hate, spoiler_tf
    from comm_board e1 left join user_info e2
	on e1.user_no=e2.user_no

    left join movie_info e3
    on e1.movieCd=e3.movieCd
    
    where board_distinct_no = 1 and e1.movieCd = #{movieCd}
	order by content_date DESC
	limit #{startRow}, #{pageSize}

</select>


  
<!-- 리뷰 페이지 베스트 리뷰 -->
<select id="getreview" resultMap="reviewdto">
    select e1.content_no, user_id, user_nickname, e1.user_no, movieCd, content_date, content_content
        , spoiler_tf, ifnull(sum(likecheck),0) as content_like, ifnull(sum(hatecheck),0) as content_hate
	from comm_board e1 left join user_info e2
	on e1.user_no=e2.user_no
	left outer join comm_likehate e4
	on e1.content_no=e4.content_no
	where board_distinct_no = 1 and movieCd = #{movieCd}
	group by e1.content_no
	order by content_like DESC, content_date DESC
	limit 2
</select>

<!-- 리뷰 페이지 일반 리뷰 -->
<select id="getgeneralreview" resultMap="reviewdto">
	select content_no, user_id, user_nickname, e1.user_no, e1.movieCd, content_date, content_content, content_like, content_hate, spoiler_tf
	from comm_board e1 left join user_info e2
    on e1.user_no=e2.user_no
	
	left join movie_info e3
	on e1.movieCd=e3.movieCd

	where board_distinct_no = 1 and e1.movieCd = #{movieCd}	
	order by content_date DESC
	limit 4
</select>


  
<!-- 리뷰 좋아요/싫어요 -->
<!-- 좋아요 검색 -->
<select id="reviewlike" parameterType="int" resultType="com.kosta.dto.LikeDTO">
	select content_no, user_no, likecheck, hatecheck
	from comm_likehate
	where content_no = #{content_no} and user_no = #{user_no}
</select>

<!-- 좋아요 추가 -->
<insert id="insertlike" parameterType="int">
	insert into comm_likehate(content_no, user_no, likecheck, hatecheck)
	values( #{content_no}, #{user_no}, 1, 0 )
</insert>
<!-- 좋아요 수정 -->
<update id="updatelike" parameterMap="hashmap">
	update comm_likehate
	<if test="likecheck==0">
		set likecheck = 1
	</if>
	<if test="likecheck==1">
		set likecheck = 0
	</if>
		where content_no = #{content_no} and user_no = #{user_no}	
</update>
<!-- 좋아요 토탈 -->
<select id="likeresult" resultType="int">
	select ifnull(sum(likecheck),0)
	from comm_likehate
	where content_no = #{content_no}
</select>

<!-- 싫어요 추가 -->
<insert id="insertdislike" parameterType="int">
	insert into comm_likehate(content_no, user_no, likecheck, hatecheck)
	values( #{content_no}, #{user_no}, 0, 1 )
</insert>
<!-- 싫어요 수정 -->
<update id="updatedislike" parameterMap="hashmap">
	update comm_likehate
	<if test="hatecheck==0">
		set hatecheck = 1
	</if>
	<if test="hatecheck==1">
		set hatecheck = 0
	</if>
		where content_no = #{content_no} and user_no = #{user_no}	
</update>
<!-- 싫어요 토탈 -->
<select id="dislikeresult" resultType="int">
	select ifnull(sum(hatecheck),0)
	from comm_likehate
	where content_no = #{content_no}
</select>



<!-- 리뷰 등록 -->
<insert id="reviewinsert" parameterMap="hashmap">
	insert into comm_board (movieCd, user_no, content_content, 
							content_date, board_distinct_no, content_like, content_hate, spoiler_tf)	
	values(#{movieCd}, #{userno}, #{contents}, now(), 1, 0, 0, #{spoiler} )
</insert>

<!-- 리뷰  수정 -->
<update id="reviewmodify" parameterMap="hashmap">
	update comm_board
	set content_content = #{contents}
	where content_no = #{contentno}
</update>
  
<!-- 리뷰 삭제 -->
<delete id="reviewdelete" parameterType="int">
	delete from comm_board
	where content_no = #{contentno}
</delete>

<!-- 리뷰 신고 -->
<select id="reportsearch" parameterMap="hashmap" resultMap="reportdto">
	select content_no, report_content
	from report
	where content_no = #{contentno} and report_content = #{reportreason}
</select>


<!-- 신고 전체 조회 -->
<select id="getreportlist" parameterMap="hashmap" resultMap="reportdto">
	select report_no, r.content_no, report_content, report_count, content_content, movieCd
	from report as r
	left join comm_board as b
	on r.content_no = b.content_no
	order by report_no DESC
	limit #{startRow}, #{pageSize}
</select>

<!-- 신고 갯수 조회-->
<select id="getreportcount" resultType="int">
	select count(*)
	from report
</select>
<insert id="reviewreport" parameterMap="hashmap">
	insert into report (content_no, report_content, report_count)
	values(#{contentno}, #{reportreason}, 1)
</insert>

<update id="reviewreportupdate" parameterMap="hashmap">
	update report
	set report_count = report_count+1
	where content_no = #{contentno} and report_content = #{reportreason}
</update>


<!-- 자유게시판 리스트 -->
<select id="userforumlist" parameterType="hashmap" resultType="com.kosta.dto.UserforumDTO">
	select e1.content_no, user_id, e1.user_no, board_distinct_no
	, content_title, content_content, content_date
	, content_like, content_hate
	, imageNum, imagePath, imageName
	from comm_board e1 left join user_info e2 
	on e1.user_no=e2.user_no
	left join board_image i
	on e1.content_no=i.content_no
	<where>
      <if test="searchtxt!=null and searchtxt!='' and !searchtxt.equals('') ">
         <choose>
            <when test="search=='content_title'">
               and content_title like CONCAT('%',#{searchtxt},'%')          
            </when>
            <when test="search=='content_content'">
               and content_content like CONCAT('%',#{searchtxt},'%')          
            </when>
            <when test="search=='user_id'">
               and e2.user_id like CONCAT('%',#{searchtxt},'%')             
            </when>
         </choose>   
      </if>  
      and movieCd = #{movieCd} and board_distinct_no = #{board_distinct_no}
   </where>
	order by content_date DESC
	limit #{startRow}, #{pageSize}
</select>  

<select id="getworstuserforms" resultType="com.kosta.dto.UserforumDTO">
	select e1.content_no, user_id, e1.user_no, board_distinct_no
	, content_title, content_content, content_date
	, content_like, content_hate
	, imageNum, imagePath, imageName
	from comm_board e1 left join user_info e2 
	on e1.user_no=e2.user_no
	left join board_image i
	on e1.content_no=i.content_no
	where movieCd = #{movieCd} and board_distinct_no = 5
	order by content_hate DESC
	limit 3
</select>

<select id="getbestuserforms" resultType="com.kosta.dto.UserforumDTO">
	select e1.content_no, user_id, e1.user_no, board_distinct_no
	, content_title, content_content, content_date
	, content_like, content_hate
	, imageNum, imagePath, imageName
	from comm_board e1 left join user_info e2 
	on e1.user_no=e2.user_no
	left join board_image i
	on e1.content_no=i.content_no
	where movieCd = #{movieCd} and board_distinct_no = 5
	order by content_like DESC
	limit 3
</select>

<!-- 자유게시판 디테일 -->
<select id="userforumdetail" parameterType="int" resultType="com.kosta.dto.UserforumDTO">
	select e1.content_no, user_id, e1.user_no, board_distinct_no
	, content_title, content_content, content_date
	, content_like, content_hate
	, imageNum, imagePath, imageName
	from comm_board e1 left join user_info e2 
	on e1.user_no=e2.user_no
	left join board_image i
	on e1.content_no=i.content_no
	where e1.content_no = #{contentno}
</select>

<!-- 자유게시판 등록 -->  
<insert id="userforuminsert" parameterType="com.kosta.dto.UserforumDTO">
	insert into comm_board (user_no, movieCd, content_title, content_content, content_date, board_distinct_no, content_like, content_hate)
	values(#{user_no}, #{movieCd}, #{content_title}, #{content_content}, now(), 5, 0, 0 )
	<selectKey keyProperty="content_no" resultType="Integer" order="AFTER">
        SELECT LAST_INSERT_ID()
    </selectKey>
</insert>
 
<update id="userforummodify" parameterType="com.kosta.dto.UserforumDTO">
		update comm_board
		set content_title = #{content_title}
		, content_content=#{content_content}
		where content_no = #{content_no}
</update>

<select id="gettotalcount" resultType="int" parameterMap="hashmap">
	select count(*)
	from comm_board e1 left join user_info e2 
	on e1.user_no=e2.user_no
	 <where>
      <if test="searchtxt!=null and searchtxt!='' and !searchtxt.equals('') ">
         <choose>
            <when test="search=='content_title'">
               and content_title like CONCAT('%',#{searchtxt},'%')          
            </when>
            <when test="search=='content_content'">
               and content_content like CONCAT('%',#{searchtxt},'%')          
            </when>
            <when test="search=='user_id'">
               and e2.user_id like CONCAT('%',#{searchtxt},'%')             
            </when>
         </choose>   
      </if>  
      and board_distinct_no = #{boardno} and movieCd = #{movieCd}
   </where>
</select>


</mapper>
